# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.5'
    
    - name: Install musl-tools
      run: sudo apt-get update && sudo apt-get install -y musl-tools

    - name: Get commit details
      id: vars
      run: |
        echo "cd_time=$(date -u '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
        echo "cd_commit=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "cd_message=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

    - name: Build server_exporter
      run: |
        CGO_ENABLED=1 CC=musl-gcc go build -v -ldflags "-linkmode external -extldflags '-static' -X 'main.version=${{ env.cd_commit }} at ${{ env.cd_time }}'" -o server_exporter server_exporter.go

    - name: Test server_exporter
      run: go test -v server_exporter.go

    - name: Calculate checksum
      run: |
        sha256sum server_exporter | awk '{print $1}' > server_exporter.sha256

    - name: Create release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ env.cd_commit }}
        tag_name: "Github Actions Build"
        files: |
          server_exporter
          server_exporter.sha256
        body: |
          Build at ${{ env.cd_time }}
          Commit message:
          ${{ env.cd_message }}
        draft: false
        prerelease: false

    # - name: Upload build artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: server_exporter
    #     path: |
    #       server_exporter
    #       server_exporter.json
